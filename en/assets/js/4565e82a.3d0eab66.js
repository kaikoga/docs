"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7509],{4331:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"modularizer/manual","title":"How to use","description":"Inspector","source":"@site/docs/modularizer/manual.md","sourceDirName":"modularizer","slug":"/modularizer/manual","permalink":"/en/modularizer/manual","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Modularizer (a.k.a. NuguminTool)","permalink":"/en/modularizer/"},"next":{"title":"AdLib","permalink":"/en/adlib/"}}');var r=o(4848),i=o(8453);const s={sidebar_position:2},l="How to use",a={},c=[];function u(e){const n={h1:"h1",header:"header",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"how-to-use",children:"How to use"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Inspector",src:o(9576).A+"",width:"370",height:"711"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Select your avatar and select from menubar\n[ GameObject ] \u2192 [ NuguminTool ] \u2192 [ NuguminTool Config ]\nor [ Component ] \u2192 [ NuguminTool ] \u2192 [ NuguminTool Config ]"}),"\n",(0,r.jsx)(n.li,{children:"Set Avatar Root to your avatar (if it is not set)"}),"\n",(0,r.jsx)(n.li,{children:"[ Select Folder ] would change your Export Directory"}),"\n",(0,r.jsx)(n.li,{children:"[ Unpack Prefab ] would unpack prefab on Nugumin!, literally, if checked"}),"\n",(0,r.jsxs)(n.li,{children:["Avatar is modularized per material by default.\nMesh to module mappings can be configured below.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"[ \uff0b ] Create new module with checked meshes"}),"\n",(0,r.jsx)(n.li,{children:"[ \u2191 ] Merge checked meshes into module above"}),"\n",(0,r.jsx)(n.li,{children:"[ \u2193 ] Merge checked meshes into module below"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Press [ Nugumin! ] when all configurations are set"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var t=o(6540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},9576:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/modularizer_config-b0bbcacf048a1bfad2100c697529402b.png"}}]);